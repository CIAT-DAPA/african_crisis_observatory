to_save
writexl::write_xlsx(to_save, "C:/Users/acmendez/Downloads/coeficientes_logisticos.xlsx")
coefs <- lapply(1:1000, function(i){
sm <- df %>%
dplyr::slice(c(which(df$Hospitalizadoymuerto == 0  ) %>% sample(., 75) , which(df$Hospitalizadoymuerto == 1))) %>%
glm(Hospitalizadoymuerto ~ SEXO  +  Edad.Nueva +SEXO:Edad.Nueva+ falla_resp  +  dif_res + Diabetes + Hipertension , data = ., family = binomial(link ="logit")) %>%
summary()
cf <- sm$coefficients %>%
as_tibble(., rownames = "coefficient") %>%
dplyr::mutate(Estimate = exp(Estimate))
return(cf)
}) %>%
bind_rows()
coefs
sm <- df %>%
dplyr::slice(c(which(df$Hospitalizadoymuerto == 0  ) %>% sample(., 75) , which(df$Hospitalizadoymuerto == 1))) %>%
glm(Hospitalizadoymuerto ~ SEXO  +  Edad.Nueva +SEXO:Edad.Nueva+ falla_resp  +  dif_res + Diabetes + Hipertension , data = ., family = binomial(link ="logit")) %>%
summary()
sm
df$Edad.Nueva %>% table
sm$coefficients %>%
as_tibble(., rownames = "coefficient") %>%
dplyr::mutate(Estimate = exp(Estimate))
coefs
coefs %>%
dplyr::filter(coefficient == i)
coefs
i <- "Hipertension1 "
i <- "Hipertension1"
coefs %>%
dplyr::filter(coefficient == i)
coefs %>%
dplyr::filter(coefficient == i)
coefs %>%
dplyr::filter(coefficient == i) %>% pull(Estimate)
coefs %>%
dplyr::filter(coefficient == i) %>% pull(Estimate) %>% quantile
to_save <- coefs$coefficient %>% unique %>%
lapply(., function(i){
coefs %>%
dplyr::filter(coefficient == i) %>%
dplyr::summarise(promedio = mean(Estimate),
varianza = var(Estimate),
quartil_25% = quantile(Estimate)[2],
quartil_75% = quantile(Estimate)[4],
min_p_val = min(`Pr(>|z|)`),
max_p_val = max(`Pr(>|z|)`) )
})
to_save <- coefs$coefficient %>% unique %>%
lapply(., function(i){
coefs %>%
dplyr::filter(coefficient == i) %>%
dplyr::summarise(promedio = mean(Estimate),
varianza = var(Estimate),
quartil_25% = quantile(Estimate)[2],
quartil_75% = quantile(Estimate)[4],
min_p_val = min(`Pr(>|z|)`),
max_p_val = max(`Pr(>|z|)`) )
})
to_save <- coefs$coefficient %>% unique %>%
lapply(., function(i){
coefs %>%
dplyr::filter(coefficient == i) %>%
dplyr::summarise(promedio = mean(Estimate),
varianza = var(Estimate),
quartil_25% = quantile(Estimate)[2],
quartil_75% = quantile(Estimate)[4],
min_p_val = min(`Pr(>|z|)`),
max_p_val = max(`Pr(>|z|)`) )
})
to_save <- coefs$coefficient %>% unique %>%
lapply(., function(i){
coefs %>%
dplyr::filter(coefficient == i) %>%
dplyr::summarise(promedio = mean(Estimate),
varianza = var(Estimate),
quartil_25% = quantile(Estimate)[2],
quartil_75% = quantile(Estimate)[4],
min_p_val = min(`Pr(>|z|)`),
max_p_val = max(`Pr(>|z|)`) )
})
coefs %>%
dplyr::filter(coefficient == i) %>%
dplyr::summarise(promedio = mean(Estimate),
varianza = var(Estimate),
quartil_25% = quantile(Estimate)[2],
quartil_75% = quantile(Estimate)[4],
min_p_val = min(`Pr(>|z|)`),
max_p_val = max(`Pr(>|z|)`) )
coefs %>%
dplyr::filter(coefficient == i) %>%
dplyr::summarise(promedio = mean(Estimate),
varianza = var(Estimate),
quartil_25 = quantile(Estimate)[2],
quartil_75 = quantile(Estimate)[4],
min_p_val = min(`Pr(>|z|)`),
max_p_val = max(`Pr(>|z|)`) )
to_save <- coefs$coefficient %>% unique %>%
lapply(., function(i){
coefs %>%
dplyr::filter(coefficient == i) %>%
dplyr::summarise(promedio = mean(Estimate),
varianza = var(Estimate),
quartil_25 = quantile(Estimate)[2],
quartil_75 = quantile(Estimate)[4],
min_p_val = min(`Pr(>|z|)`),
max_p_val = max(`Pr(>|z|)`) )
})
to_save
names(to_save) <- coefs$coefficient %>% unique
to_save
coefs
coefs %>%
dplyr::group_by(coefficient) %>%
dplyr::summarise(promedio = mean(Estimate),
varianza = var(Estimate),
quartil_25 = quantile(Estimate)[2],
quartil_75 = quantile(Estimate)[4],
min_p_val = min(`Pr(>|z|)`),
max_p_val = max(`Pr(>|z|)`) )
options(scipen = 999)
to_save
coefs %>%
dplyr::group_by(coefficient) %>%
dplyr::summarise(promedio = mean(Estimate),
varianza = var(Estimate),
quartil_25 = quantile(Estimate)[2],
quartil_75 = quantile(Estimate)[4],
min_p_val = min(`Pr(>|z|)`),
max_p_val = max(`Pr(>|z|)`) )
to_save <- coefs %>%
dplyr::group_by(coefficient) %>%
dplyr::summarise(promedio = mean(Estimate),
varianza = var(Estimate),
quartil_25 = quantile(Estimate)[2],
quartil_75 = quantile(Estimate)[4],
min_p_val = min(`Pr(>|z|)`),
max_p_val = max(`Pr(>|z|)`) )
writexl::write_xlsx(to_save, "C:/Users/acmendez/Downloads/coeficientes_logisticos.xlsx")
writexl::write_xlsx(to_save, "C:/Users/acmendez/Downloads/coeficientes_logisticos.xlsx")
coefs %>%
dplyr::group_by(coefficient) %>%
dplyr::summarise(promedio = mean(Estimate),
varianza = var(Estimate),
quartil_25 = quantile(Estimate)[2],
quartil_75 = quantile(Estimate)[4],
min_p_val = min(`Pr(>|z|)`),
max_p_val = max(`Pr(>|z|)`) )
coefs <- lapply(1:1000, function(i){
sm <- df %>%
dplyr::slice(c(which(df$Hospitalizadoymuerto == 0  ) %>% sample(., 75) , which(df$Hospitalizadoymuerto == 1))) %>%
glm(Hospitalizadoymuerto ~ SEXO  +  Edad.Nueva + falla_resp  +  dif_res + Diabetes + Hipertension , data = ., family = binomial(link ="logit")) %>%
summary()
cf <- sm$coefficients %>%
as_tibble(., rownames = "coefficient") %>%
dplyr::mutate(Estimate = exp(Estimate))
return(cf)
}) %>%
bind_rows()
to_save <- coefs %>%
dplyr::group_by(coefficient) %>%
dplyr::summarise(promedio = mean(Estimate),
varianza = var(Estimate),
quartil_25 = quantile(Estimate)[2],
quartil_75 = quantile(Estimate)[4],
min_p_val = min(`Pr(>|z|)`),
max_p_val = max(`Pr(>|z|)`) )
coefs
coefs %>% dplyr::filter(coefficient == "SEXOMasculino")
coefs %>% dplyr::filter(coefficient == "SEXOMasculino") %>% summary
to_save
coefs %>% dplyr::filter(coefficient == "SEXOMasculino") %>% summary
coefs %>% dplyr::filter(coefficient == "Edad.Nueva1") %>% summary
coefs
df
df$Edad.Nueva
sm
df %>%
dplyr::slice(c(which(df$Hospitalizadoymuerto == 0  ) %>% sample(., 75) , which(df$Hospitalizadoymuerto == 1))) %>%
dplyr::select(Hospitalizadoymuerto, Edad.Nueva1 )
df %>%
dplyr::slice(c(which(df$Hospitalizadoymuerto == 0  ) %>% sample(., 75) , which(df$Hospitalizadoymuerto == 1))) %>%
dplyr::select(Hospitalizadoymuerto, Edad.Nueva1)
df %>%
dplyr::slice(c(which(df$Hospitalizadoymuerto == 0  ) %>% sample(., 75) , which(df$Hospitalizadoymuerto == 1)))
df %>%
dplyr::slice(c(which(df$Hospitalizadoymuerto == 0  ) %>% sample(., 75) , which(df$Hospitalizadoymuerto == 1))) %>%
dplyr::select(Hospitalizadoymuerto, Edad.Nueva)
df %>%
dplyr::slice(c(which(df$Hospitalizadoymuerto == 0  ) %>% sample(., 75) , which(df$Hospitalizadoymuerto == 1))) %>%
dplyr::select(Hospitalizadoymuerto, Edad.Nueva) %>% table
to_plot
require(pacman)
pacman::p_load(tidyverse, raster, sf, sp, stringr, stringi, tmap, FactoMineR)
get_conflic_data <- function(root, iso, country = 'Senegal'){
out <- paste0(root,'/data/',iso,'/conflict/',iso,'_conflict.csv')
dir.create(path = dirname(out), F, T)
if(!file.exists(out)){
# Filter African conflict to the specific country
cnf <- readxl::read_excel(paste0(root,'/data/_global/conflict/Africa_1997-2021_Apr02.xlsx'), sheet = 1)
cnf <- cnf %>% dplyr::filter(COUNTRY == country)
readr::write_csv(cnf, out)
conflict <- cnf; rm(cnf, out)
} else {
# Load country conflict
conflict <- readr::read_csv(out); rm(out)
}; rm(out)
# Load the country lowest administrative level shapefile
if(!file.exists(paste0(root,'/data/',iso,'/_shps/',iso,'.shp'))){
dir.create(path = dirname(paste0(root,'/data/',iso,'/_shps/',iso,'.shp')), recursive = TRUE)
shp <- lowest_gadm(iso = iso, out = paste0(root,'/data/',iso,'/_shps/',iso,'.shp'))
adm <- grep(pattern = '^NAME_', x = names(shp), value = T)
shp@data$key <- tolower(do.call(paste, c(shp@data[,adm], sep="-")))
} else {
shp <- raster::shapefile(x = paste0(root,'/data/',iso,'/_shps/',iso,'.shp'))
adm <- grep(pattern = '^NAME_', x = names(shp), value = T)
shp@data$key <- tolower(do.call(paste, c(shp@data[,adm], sep="-")))
}
sft <- shp # Shapefile in terra format
# Extract administrative names using reported conflict coordinates by ACLED
conflict  <- cbind(conflict,raster::extract(x = shp, y = conflict[,c('LONGITUDE','LATITUDE')]))
# Get conflict summarization variables per coordinates
cnf_summ <- conflict %>%
dplyr::group_by(LONGITUDE, LATITUDE) %>%
dplyr::summarise(EVENTS           = dplyr::n(),
TYPE_RICHNESS    = EVENT_TYPE %>% unique() %>% length(),
SUBTYPE_RICHNESS = SUB_EVENT_TYPE %>% unique() %>% length(),
ACTOR1_RICHNESS  = ACTOR1 %>% unique() %>% length(),
ACTOR2_RICHNESS  = ACTOR2 %>% unique() %>% length(),
FATALITIES       = sum(FATALITIES)) %>%
dplyr::ungroup() %>%
dplyr::select(x= LONGITUDE, y = LATITUDE, everything(.))
return(list(cnf_summ, sft))
}
get_cluster_labels <- function(df){
conf_cluts_vals <- df %>%
dplyr::select(EVENTS:FATALITIES, starts_with("clust")) %>%
group_by(clust) %>%
dplyr::summarise(m_events = mean(EVENTS)) %>%
arrange(desc(m_events)) %>%
dplyr::mutate(label = c("High conflict", "Moderate conflict", "Limited conflict"),
short_label = c("High", "Moderate", "Limited")) %>%
dplyr::mutate(across(everything(.), as.character),
label = factor(label, levels = c("High conflict","Moderate conflict",  "Limited conflict")))
return(conf_cluts_vals)
}
make_cluster_plots <- function(df){
g <- df %>%
dplyr::select(EVENTS:FATALITIES, starts_with("clust")) %>%
tidyr::pivot_longer(-clust, names_to = "var", values_to = "vals") %>%
ggplot(aes(y= vals, x = clust))+
geom_violin(trim=FALSE, fill="gray")+
geom_boxplot(width=0.1, fill="white")+
facet_wrap(~var, scales = "free")+
xlab("")+
theme_bw(base_size = 10)+
scale_y_log10()
return(g)
}
root <- 'C:/Users/acmendez/OneDrive - CGIAR/African_Crisis_Observatory'
iso <- "KEN"
pop_dens <- raster::raster(paste0(root,"/data/",iso, "/population_density/medn_popd.tif"))
shp <- raster::shapefile(paste0(root,"/data/", iso, "/_shps/",iso,".shp" )) %>%
sf::st_as_sf() %>%
dplyr::mutate(id = 1:nrow(.))
world_mask <- raster::raster(paste0(root,"/data/_global/masks/mask_world_1km.tif")) %>%
raster::crop(., extent(shp))
knl <- raster::raster(paste0(root, "/data/", iso, "/conflict/conflict_kernel_density.tif"))
crs(knl) <- crs(world_mask)
conflict_raw <-  get_conflic_data(root = root,
iso = iso) %>%
purrr::pluck(1)
coordinates(conflict_raw) <- ~x+y
crs(conflict_raw) <- crs(world_mask)
conflict_sf <- sf::st_as_sf(conflict_raw)
grd <- st_make_grid(st_bbox(extent(shp)), cellsize = 0.2, square =  T) %>%
st_as_sf(.) %>%
dplyr::mutate(id = 1:nrow(.))
st_crs(grd) <- st_crs(conflict_sf)
grd <- grd %>%
dplyr::mutate(ov = sapply(st_intersects(grd, shp) , function(i){if(length(i)>0){return(1)}else{return(NA)}})) %>%
dplyr::filter(!is.na(ov)) %>%
dplyr::select(-ov) %>%
dplyr::mutate(id = 1:nrow(.))
to_cluster <- conflict_sf %>%
dplyr::mutate(ov = unlist(st_intersects(conflict_sf, grd)),
pop_dens =raster::extract(pop_dens, st_as_sf(.) %>% st_cast("POINT")%>% st_coordinates()),
EVENTS = ifelse(pop_dens == 0 , 1, EVENTS/pop_dens),
knl = raster::extract(knl, st_as_sf(.) %>% st_cast("POINT")%>% st_coordinates())) %>%
dplyr::group_by(ov) %>%
dplyr::summarise(EVENTS = sum(EVENTS, na.rm = T),
TYPE_RICHNESS = max(TYPE_RICHNESS, na.rm = T),
SUBTYPE_RICHNESS = max(SUBTYPE_RICHNESS, na.rm = T),
ACTOR1_RICHNESS = max(ACTOR1_RICHNESS, na.rm = T),
ACTOR2_RICHNESS = max(ACTOR2_RICHNESS, na.rm = T),
FATALITIES = sum(FATALITIES, na.rm = T),
knl = median(knl, na.rm = T)) %>%
dplyr::ungroup()
#                knl = raster::extract(knl, st_as_sf(to_cluster) %>% st_cast("POINT")%>% st_coordinates())
x <- to_cluster %>%
dplyr::mutate(knl = ifelse(is.na(knl), mean(knl, na.rm = T), knl)) %>%
dplyr::select(-ov) %>%
st_drop_geometry() %>%
FactoMineR::PCA(., scale.unit = T, ncp =2 )
x <- rbind(x$ind$coord)%>%
dist(., method = "euclidean")
dst<- dist(x, method = "euclidean")
hc <- hclust(dst, method = "complete") %>%
stats::cutree(tree = ., k = 3)
km <- stats::kmeans(x, 3)
to_cluster$clust_km <-  left_join( tibble(clust = as.character(km$cluster)), to_cluster %>%
st_drop_geometry() %>%
dplyr::select(EVENTS:FATALITIES) %>%
bind_cols(clust = km$cluster) %>%
get_cluster_labels() %>%
dplyr::select(clust, label) , by = c("clust"))%>%
pull(label)
to_plot <- grd %>%
left_join(., to_cluster %>% dplyr::select(., ov, contains("clust")) %>% st_drop_geometry(), by = c("id" = "ov")) %>%
dplyr::filter(!is.na(clust_km))
to_plot
sf::st_write(eco_grid_sf, paste0(dest_dir, dimension,"_regular_clust.shp"), delete_dsn = T)
st_dir
dest_dir <- paste0(root, "/_results/cluster_results/conflict/")
paste0(dest_dir, "conflict_regular_clust.shp")
sf::st_write(to_plot, paste0(dest_dir, "conflict_regular_clust.shp"), delete_dsn = T)
dest_dir
paste0(dest_dir, "conflict_regular_clust.shp")
sf::st_write(to_plot, paste0(dest_dir, "conflict_regular_clust.shp"), delete_dsn = T)
dest_dir
iso
dest_dir
sf::st_write(to_plot, paste0(dest_dir, "data/", iso, "/conflict/conflict_regular_clust.shp"), delete_dsn = T)
paste0(dest_dir, "data/", iso, "/conflict/conflict_regular_clust.shp")
dest_dir
sf::st_write(to_plot, paste0(root, "data/", iso, "/_results/cluter_results/conflict/conflict_regular_clust.shp"), delete_dsn = T)
paste0(root, "data/", iso, "/_results/cluter_results/conflict/conflict_regular_clust.shp")
sf::st_write(to_plot, paste0(root, "/data/", iso, "/_results/cluter_results/conflict/conflict_regular_clust.shp"), delete_dsn = T)
paste0(root, "/data/", iso, "/_results/cluter_results/conflict/conflict_regular_clust.shp")
sf::st_write(to_plot, paste0(root, "/data/", iso, "/_results/cluster_results/conflict/conflict_regular_clust.shp"), delete_dsn = T)
sf::st_write(to_plot, paste0(root, "/data/", iso, "/_results/cluster_results/conflict/conflict_regular_clust.shp"), delete_dsn = T)
data %>%
as_tibble %>%
filter(Hospitalizado == 1,
Sintomas_890 != "No registra")
df <- data %>%
as_tibble %>%
filter(Hospitalizado == 1,
Sintomas_890 != "No registra") %>%
dplyr::select(Hospitalizadoymuerto, SEXO, Edad, falla_resp, dif_res, Diabetes, Hipertension) %>%
dplyr::mutate(across(everything(.), str_trim),
Edad.Nueva = case_when(Edad.Nueva == "1" ~ "0",
Edad.Nueva == "2" ~ "1",
TRUE ~ NA_character_),
across(everything(.), as.factor))
sm <- df %>%
dplyr::slice(c(which(df$Hospitalizadoymuerto == 0  ) %>% sample(., 75) , which(df$Hospitalizadoymuerto == 1))) %>%
glm(Hospitalizadoymuerto ~ SEXO  +  Edad + falla_resp  +  dif_res + Diabetes + Hipertension , data = ., family = binomial(link ="logit")) %>%
summary()
data %>%
as_tibble %>%
filter(Hospitalizado == 1,
Sintomas_890 != "No registra") %>%
dplyr::select(Hospitalizadoymuerto, SEXO, Edad, falla_resp, dif_res, Diabetes, Hipertension)
data %>%
as_tibble %>%
filter(Hospitalizado == 1,
Sintomas_890 != "No registra") %>%
dplyr::select(Hospitalizadoymuerto, SEXO, Edad, falla_resp, dif_res, Diabetes, Hipertension) %>%
dplyr::mutate(across(-Edad, str_trim),
across(everything(.), as.factor))
data %>%
as_tibble %>%
filter(Hospitalizado == 1,
Sintomas_890 != "No registra") %>%
dplyr::select(Hospitalizadoymuerto, SEXO, Edad, falla_resp, dif_res, Diabetes, Hipertension) %>%
dplyr::mutate(across(-Edad, str_trim)
)
data %>%
as_tibble %>%
filter(Hospitalizado == 1,
Sintomas_890 != "No registra") %>%
dplyr::select(Hospitalizadoymuerto, SEXO, Edad, falla_resp, dif_res, Diabetes, Hipertension) %>%
dplyr::mutate(across(-Edad, str_trim),
across(-Edad, as.factor))
sm <- df %>%
dplyr::slice(c(which(df$Hospitalizadoymuerto == 0  ) %>% sample(., 75) , which(df$Hospitalizadoymuerto == 1))) %>%
glm(Hospitalizadoymuerto ~ SEXO  +  Edad + falla_resp  +  dif_res + Diabetes + Hipertension , data = ., family = binomial(link ="logit")) %>%
summary()
df <- data %>%
as_tibble %>%
filter(Hospitalizado == 1,
Sintomas_890 != "No registra") %>%
dplyr::select(Hospitalizadoymuerto, SEXO, Edad, falla_resp, dif_res, Diabetes, Hipertension) %>%
dplyr::mutate(across(-Edad, str_trim),
across(-Edad, as.factor))
df
df %>%
dplyr::slice(c(which(df$Hospitalizadoymuerto == 0  ) %>% sample(., 75) , which(df$Hospitalizadoymuerto == 1)))
df %>%
dplyr::slice(c(which(df$Hospitalizadoymuerto == 0  ) %>% sample(., 75) , which(df$Hospitalizadoymuerto == 1))) %>%
glm(Hospitalizadoymuerto ~ SEXO  +  Edad + falla_resp  +  dif_res + Diabetes + Hipertension , data = ., family = binomial(link ="logit"))
sm <- df %>%
dplyr::slice(c(which(df$Hospitalizadoymuerto == 0  ) %>% sample(., 75) , which(df$Hospitalizadoymuerto == 1))) %>%
glm(Hospitalizadoymuerto ~ SEXO  +  Edad + falla_resp  +  dif_res + Diabetes + Hipertension , data = ., family = binomial(link ="logit")) %>%
summary()
sm$coefficients %>%
as_tibble(., rownames = "coefficient") %>%
dplyr::mutate(Estimate = exp(Estimate))
sm <- df %>%
dplyr::slice(c(which(df$Hospitalizadoymuerto == 0  ) %>% sample(., 75) , which(df$Hospitalizadoymuerto == 1))) %>%
glm(Hospitalizadoymuerto ~ SEXO  +  Edad   +  dif_res + Diabetes + Hipertension , data = ., family = binomial(link ="logit")) %>%
summary()
sm
sm <- df %>%
dplyr::slice(c(which(df$Hospitalizadoymuerto == 0  ) %>% sample(., 75) , which(df$Hospitalizadoymuerto == 1))) %>%
glm(Hospitalizadoymuerto ~ SEXO  +  Edad + falla_resp  +  dif_res + Diabetes + Hipertension , data = ., family = binomial(link ="logit")) %>%
summary()
sm
coefs <- lapply(1:1000, function(i){
sm <- df %>%
dplyr::slice(c(which(df$Hospitalizadoymuerto == 0  ) %>% sample(., 75) , which(df$Hospitalizadoymuerto == 1))) %>%
glm(Hospitalizadoymuerto ~ SEXO  +  Edad + falla_resp  +  dif_res + Diabetes + Hipertension , data = ., family = binomial(link ="logit")) %>%
summary()
cf <- sm$coefficients %>%
as_tibble(., rownames = "coefficient") %>%
dplyr::mutate(Estimate = exp(Estimate))
return(cf)
}) %>%
bind_rows()
to_save <- coefs %>%
dplyr::group_by(coefficient) %>%
dplyr::summarise(promedio = mean(Estimate),
varianza = var(Estimate),
quartil_25 = quantile(Estimate)[2],
quartil_75 = quantile(Estimate)[4],
min_p_val = min(`Pr(>|z|)`),
max_p_val = max(`Pr(>|z|)`) )
gc()
to_save
to_save <- coefs %>%
dplyr::group_by(coefficient) %>%
dplyr::summarise(promedio = mean(Estimate),
mediana = median(Estimate),
varianza = var(Estimate),
quartil_25 = quantile(Estimate)[2],
quartil_75 = quantile(Estimate)[4],
min_p_val = min(`Pr(>|z|)`),
max_p_val = max(`Pr(>|z|)`) )
to_save
coefs <- lapply(1:1000, function(i){
sm <- df %>%
dplyr::slice(c(which(df$Hospitalizadoymuerto == 0  ) %>% sample(., 75) , which(df$Hospitalizadoymuerto == 1))) %>%
glm(Hospitalizadoymuerto ~ SEXO  +  Edad + falla_resp  +  dif_res + Diabetes + Hipertension , data = ., family = binomial(link ="logit")) %>%
summary()
cf <- sm$coefficients %>%
as_tibble(., rownames = "coefficient") %>%
dplyr::mutate(Estimate = exp(Estimate))
return(cf)
}) %>%
bind_rows()
coefs %>%
dplyr::group_by(coefficient) %>%
dplyr::summarise(promedio = mean(Estimate),
mediana = median(Estimate),
varianza = var(Estimate),
quartil_25 = quantile(Estimate)[2],
quartil_75 = quantile(Estimate)[4],
min_p_val = min(`Pr(>|z|)`),
max_p_val = max(`Pr(>|z|)`) )
sm %>% select(Hospitalizadoymuerto, falla_resp)
df %>% select(Hospitalizadoymuerto, falla_resp) %>% table
df %>% dplyr::select(Hospitalizadoymuerto, falla_resp) %>% table
sm <- df %>%
dplyr::slice(c(which(df$Hospitalizadoymuerto == 0  ) %>% sample(., 250) , which(df$Hospitalizadoymuerto == 1))) %>%
glm(Hospitalizadoymuerto ~ SEXO  +  Edad + falla_resp  +  dif_res + Diabetes + Hipertension , data = ., family = binomial(link ="logit")) %>%
summary()
cf <- sm$coefficients %>%
as_tibble(., rownames = "coefficient") %>%
dplyr::mutate(Estimate = exp(Estimate))
cf
sm
sm <- df %>%
dplyr::slice(c(which(df$Hospitalizadoymuerto == 0  ) %>% sample(., 75) , which(df$Hospitalizadoymuerto == 1))) %>%
glm(Hospitalizadoymuerto ~ SEXO  +  Edad + falla_resp  +  dif_res + Diabetes + Hipertension , data = ., family = binomial(link ="logit")) %>%
summary()
sm
sm <- df %>%
dplyr::slice(c(which(df$Hospitalizadoymuerto == 0  ) %>% sample(., 75) , which(df$Hospitalizadoymuerto == 1))) %>%
glm(Hospitalizadoymuerto ~ SEXO  +  Edad + falla_resp  +  dif_res + Diabetes + Hipertension , data = ., family = binomial(link ="logit")) %>%
summary()
sm
sm <- df %>%
dplyr::slice(c(which(df$Hospitalizadoymuerto == 0  ) %>% sample(., 250) , which(df$Hospitalizadoymuerto == 1))) %>%
glm(Hospitalizadoymuerto ~ SEXO  +  Edad + falla_resp  +  dif_res + Diabetes + Hipertension , data = ., family = binomial(link ="logit")) %>%
summary()
sm
data
data %>%
as_tibble %>%
filter(Hospitalizado == 1,
Sintomas_890 != "No registra")
to_plot
to_cluster
grd %>%
left_join(., to_cluster %>% st_drop_geometry(), by = c("id" = "ov"))
to_plot <- grd %>%
left_join(., to_cluster %>% st_drop_geometry(), by = c("id" = "ov")) %>%
dplyr::filter(!is.na(clust_km))
to_plot
sf::st_write(to_plot, paste0(root, "/data/", iso, "/_results/cluster_results/conflict/conflict_regular_clust.shp"), delete_dsn = T)
gc()
