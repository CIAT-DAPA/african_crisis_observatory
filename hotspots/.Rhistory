pal_g[length(pal_g)] <- other_color
int_hotst_conf <- tmap::tm_shape(shp_c)+
tm_borders(col = "black")+
tm_shape(ht_rast_f)+
tm_raster( style = "cat", palette = paletteer_dynamic("ggthemes_ptol::qualitative", n_colors), title =  paste("Hotspots", toupper(ip_x)))+
tm_shape(tmp_df)+
tm_fill(col = "intersect_conf_clim", palette = pal_g , alpha = 0.5, title = paste0(var, " cluster"))+
#tm_borders(col ="black") +
tm_compass(type = "8star", position = c("right", "top")) +
tm_scale_bar(breaks = c(0, 100, 200), text.size = 1, position = c(scale_bar_pos, scale_bar_top))+
tm_layout(legend.outside=T,
legend.text.size = 1,
legend.title.size= 1.3,
legend.frame=F,
#legend.position=c(0.985, 0.985),
#legend.just = c("left", "top"),
#legend.width= 1,
legend.outside.position = "right",
legend.outside.size = 0.45,
#outer.margins = c(0,0,0,0),
#inner.margins = c(0,0,0,0)
legend.height= -0.2 )
#x11();int_hotst_conf
if(var_name == "NAME_0"| length(unique(shp_c@data[, var_name  ])) > 2){
tmap_save(int_hotst_conf,
filename= paste0(root, "_results/cluster_results/",tolower(gsub(" ", "_", var)), "_",ip_x, "_", k , "_climate_intersection.png"),
dpi=300,
#insets_tm= insetmap,
#insets_vp= viewport(x= 0.45, y= 0.78, width= 0.2, height= 0.2),
height=10,
width=16,
units="in")
}else{
tmap_save(int_hotst_conf,
filename= paste0(root, "_results/cluster_results/",tolower(gsub(" ", "_", var)), "_",ip_x, "_", k , "_climate_intersection.png"),
dpi=300,
insets_tm= insetmap,
insets_vp= viewport(x= 0.45, y= 0.78, width= 0.2, height= 0.2),
height=10,
width=16,
units="in")
}
})
}#end for ips categories
}#end for
#' Donwload from https://fews.net/fews-data/335
livelihood_pth <-  switch (iso,
"KEN" =  "livelihood/KE_LHZ_2011.shp",
"SEN" =  "livelihood/SN_LHZ_2021.shp",
"NGA" =  "livelihood/NG_LHZ_2018.shp",
"MLI" =  "livelihood/ML_LHZ_2014.shp",
"GTM" =  "livelihood/GT_LHZ_2016.shp",
"PHL" =  "livelihood/ML_LHZ_2014.shp",
"NER" =  "livelihood/NE_LHZ_2011.shp",
"BFA" =  "livelihood/BF_LHZ_2014.shp",
"SOM" =  "livelihood/SO_LHZ_2011.shp",
"MOZ" =  "livelihood/MZ_LHZ_2011.shp"
)
mf_diff <- raster::raster(paste0(root, "education/medn_difference_edu.tif"))
m_edu <- raster::raster(paste0(root, "education/medn_male_edu.tif"))
f_edu <- raster::raster(paste0(root, "education/medn_female_edu.tif"))
eth <- raster::shapefile("//alliancedfs.alliance.cgiar.org/WS18_Afrca_K_N_ACO/1.Data/Palmira/CSO/data/_global/ethnicity/GREG.shp")
m_pop <- raster::raster(paste0(root, "gender_population/", iso,"_male_population.tif"))
m_pop[m_pop[] <= 1] <- NA
f_pop <- raster::raster(paste0(root, "gender_population/", iso,"_female_population.tif"))
f_pop[f_pop[] <= 1] <- NA
livelihoods <- raster::shapefile(paste0(root, livelihood_pth ))
fips_country <- switch (iso,
"KEN" = "KE",
"UGA" = "UG",
"GTM" = "GT",
"MLI" = "ML",
"NGA" = "NI",
"PHL" = "RP",
"SDN" = "SU",
"SEN" = "SG",
"ETH" = "ET",
"ZMB" = "ZA",
"ZWE" = "ZI",
"PHL" = "PH",
"NER" = "NE",
"BFA" = "BF",
"SOM" = "SO",
"MOZ" = "MZ"
)
gwis_country <- switch (iso,
"KEN" = "501",
"UGA" = "500",
"GTM" = "90",
"MLI" = "432",
"NGA" = "475",
"PHL" = "840",
"SDN" = "625",
"SEN" = "433",
"ETH" = "530",
"ZMB" = "551",
"ZWE" = "552"
)
eth_c<- eth[eth@data$FIPS_CNTRY == fips_country,]
eth_c@data$eth_short_name <- eth_c@data %>%
dplyr::select(contains("SHORTNAM")) %>%
apply(., 1, function(rw){paste(na.omit(rw), collapse = ";")})
eth_c@data$eth_long_name <- eth_c@data %>%
dplyr::select(contains("LONGNAM")) %>%
apply(., 1, function(rw){paste(na.omit(rw), collapse = ";")})
clusts_to_share <- conf_clim
rs <- st_intersects(clusts_to_share, st_as_sf(shp))
# Append attributes from sf2 to sf1 based on intersections
for (i in 1:nrow(clusts_to_share)){
clusts_to_share[i, 'NAME_0'] <- lapply(rs[i], function(x){shp$NAME_0[x]}) %>% unlist() %>% unique() %>% paste(., collapse = ",")
clusts_to_share[i, 'NAME_1'] <- lapply(rs[i], function(x){shp$NAME_1[x]}) %>% unlist() %>% unique() %>% paste(., collapse = ",")
clusts_to_share[i, 'NAME_2'] <- lapply(rs[i], function(x){shp$NAME_3[x]}) %>% unlist() %>% unique() %>% paste(., collapse = ",")
clusts_to_share[i, 'NAME_3'] <- lapply(rs[i], function(x){shp$NAME_3[x]}) %>% unlist() %>% unique() %>% paste(., collapse = ",")
}
mf_diff_ext <- exactextractr::exact_extract(mf_diff, sf::st_as_sf(clusts_to_share), fun = "median")
m_edu_ext <- exactextractr::exact_extract(m_edu, sf::st_as_sf(clusts_to_share), fun = "median")
f_edu_ext <- exactextractr::exact_extract(f_edu, sf::st_as_sf(clusts_to_share), fun = "median")
m_pop_ext <- exactextractr::exact_extract(m_pop, sf::st_as_sf(clusts_to_share), fun = "sum")
f_pop_ext <- exactextractr::exact_extract(f_pop, sf::st_as_sf(clusts_to_share), fun = "sum")
eth_ext <- st_intersection(clusts_to_share, st_as_sf(eth_c)) %>%
dplyr::group_by(ov) %>%
dplyr::summarize(eth_short_name = paste0(eth_short_name, collapse = ";"), eth_long_name = paste0(eth_long_name, collapse = ";") ) %>%
st_drop_geometry()
liveext <- st_intersection(clusts_to_share, st_as_sf(livelihoods)) %>%
dplyr::group_by(ov) %>%
dplyr::summarize(LZNAMEEN = paste0(LZNAMEEN, collapse = ";")) %>%
st_drop_geometry()
##extraer todas las variables de clima
all_rasts <- data.frame(var_name = list.files(paste0(root), pattern = ".tif$", recursive = T),
full_path = list.files(paste0(root), pattern = ".tif$", recursive = T, full.names = T) ) %>%
dplyr::filter(!grepl("old|_results", var_name))
clim_selc <- read_csv(paste0(root, "_results/cluster_results/climate/climate_most_imp_clim_vars.csv")) %>%
unlist %>%
paste0(., collapse = "|")
clim_rasts <- all_rasts %>%
dplyr::filter(grepl( clim_selc, var_name)) %>%
purrr::pmap(., .f = function(var_name, full_path ){
to_ret <- data.frame(vr = exactextractr::exact_extract(raster(full_path), sf::st_as_sf(clusts_to_share), fun = "median") )
names(to_ret) <- stringr::str_extract(var_name, pattern = "[a-zA-Z0-9_]+.tif" ) %>%
stringr::str_replace(., pattern = ".tif", replacement = "") %>%
paste0("climvar_", .)
return(to_ret)
}) %>%
bind_cols(.)
#extraer todas las variables de los ips
ip <- "ip_all"
n_vars <- 10
ip_var_list <- read_csv(paste0(root,"_results/hotspots/soc_eco_all_variables.csv")) %>%
dplyr::mutate(Code = ifelse(grepl("\\{iso\\}", Code), gsub("\\{iso\\}", iso, Code), Code),
Code = tolower(Code))
ip_vars <- list.files(paste0(root,"_results/hotspots/"), pattern = paste0("_sorted_",unique(shp$NAME_0), '_', ip, ".xlsx"), full.names = T) %>%
readxl::read_excel(.) %>%
dplyr::mutate(Code = tolower(Code)) %>%
dplyr::left_join(., ip_var_list %>%
dplyr::filter(IP_id == ip ) %>%
dplyr::select(-Variable, - Classification), by = c("Code" = "Code")) %>%
dplyr::mutate(Code = ifelse(grepl("_awe", Code), paste0(iso,"_AWE"), Code),
Code = ifelse(grepl("_rwi", Code), paste0(iso, "_rwi"), Code)) %>%
dplyr::slice(1:n_vars)
ip_rasts <- all_rasts %>%
dplyr::filter(grepl( ip_vars$Code %>% paste0(., collapse = "|"), var_name)) %>%
dplyr::mutate(Code =  stringr::str_extract(var_name, pattern = "[a-zA-Z0-9_]+.tif" ) %>%
stringr::str_replace(., pattern = ".tif", replacement = "")) %>%
dplyr::left_join(., ip_vars) %>%
dplyr::mutate(final_name = paste0(Classification, "_", Code, "_thr[", Threshold, "]_perc[", Percentile,"]")) %>%
purrr::pmap(., .f = function(full_path, final_name, Threshold, Percentile, ...){
r <- terra::rast(full_path)
thr <- Threshold
prc <- Percentile %>% as.numeric(.)
if(!is.na(thr)){
eval(parse(text = paste0('r[!(r ',thr,')] <- NA')))
}
mn <- median(r[], na.rm = T)
qtl_country <- global(x = r, fun = quantile, probs = prc, na.rm = T) %>% as.numeric()
c_mask <- terra::rast(c_mask)
r <- r %>%
terra::crop(x = ., y = terra::ext(c_mask)) %>%
terra::resample(x = ., y = c_mask) %>%
terra::mask(., mask = terra::vect(shp_c))
to_check <- (min(r[], na.rm = T) == quantile(r[], probs = 0.25, na.rm = T) & prc == 0.1) |
(max(r[], na.rm = T) == quantile(r[], probs = 0.75, na.rm = T) & prc == 0.9)
stopifnot("Raster values distribution very Skewed" = !to_check)
if(prc > 0.5){
r[r < qtl_country] <- NA
} else {
r[r > qtl_country] <- NA
}
to_ret <- data.frame(vr = exact_extract(r, sf::st_as_sf(clusts_to_share), fun = "median") )
names(to_ret) <- final_name
return(to_ret)
}) %>%
dplyr::bind_cols()
clusts_to_share1 <- merge(x=clusts_to_share,y=liveext, by=c("ov"),all.x=TRUE)
clusts_to_share1 <- merge(x=clusts_to_share,y=eth_ext, by=c("ov"),all.x=TRUE)
View(clusts_to_share)
View(liveext)
View(clusts_to_share1)
clusts_to_share1 <- merge(x=clusts_to_share,y=liveext, by=c("ov"),all.x=TRUE)
clusts_to_share1 <- merge(x=clusts_to_share1,y=eth_ext, by=c("ov"),all.x=TRUE)
clusts_to_share <- merge(x=clusts_to_share,y=liveext, by=c("ov"),all.x=TRUE)
clusts_to_share <- merge(x=clusts_to_share1,y=eth_ext, by=c("ov"),all.x=TRUE)
clusts_to_share <- clusts_to_share %>%
dplyr::mutate(
median_male_female_edu_diff  = mf_diff_ext,
median_male_edu = m_edu_ext,
median_female_edu = f_edu_ext,
male_population = m_pop_ext,
female_population = f_pop_ext)
# extract information from ip variables
rc_fls <- list.files(path = paste0(root, "_results/hotspots/ip_maps/"), pattern = "rc.tif$")
ip_raw_info <- tibble(file_names = rc_fls,
source_file = stringr::str_extract(rc_fls , pattern = "_([A-Z](\\w| )+)_") %>%
stringr::str_replace_all("_", "") %>%
stringr::str_replace("ip", ""),
IP_id = stringr::str_extract(rc_fls , pattern = "ip_all"),
Code = str_replace(rc_fls , pattern = "_(ip_all[0-9]rc.tif)", "") %>%
str_replace(. , pattern = "_[A-Z][a-z]+ [a-z]+", "") %>%
str_replace(. , pattern = "_[A-Z][a-z]+", "") ,
file_path = paste0(root, "_results/hotspots/ip_maps/",rc_fls))
for(ip_x in get_ip_names){
v_name <- paste0(ip_x, "_text_description")
clusts_to_share@data <- clusts_to_share@data %>%
dplyr::mutate(!!v_name := ip_text_description(shp_object = clusts_to_share,
ip = ip_x,
df = ip_raw_info,
n_vars = 10 ))
}
for(ip_x in get_ip_names){
v_name <- paste0(ip_x, "_text_description")
clusts_to_share <- clusts_to_share %>%
dplyr::mutate(!!v_name := ip_text_description(shp_object = clusts_to_share,
ip = ip_x,
df = ip_raw_info,
n_vars = 10 ))
}
clusts_to_share <- clusts_to_share %>%
dplyr::mutate(across(everything(.), as.vector)) %>%
dplyr::select(  EVENTS,
TYPE_RICHNESS = TYPE_RI,
SUBTYPE_RICHNESS = SUBTYPE,
ACTOR1_RICHNESS = ACTOR1_,
ACTOR2_RICHNESS = ACTOR2_,
FATALITIES = FATALIT,
conflict_clust_label = label.1,
conflict_clust_short_label = clust_km,
conflict_cluster_text_description ,
clim_cluster_text_description = clim_cluster,
clim_cluster_short_label,
intersect_conf_clim,
starts_with("ip"),
NAME_1,
NAME_2,
NAME_3,
clim_clust_order,
starts_with("median"),
starts_with("ethnicity"),
female_population,
male_population,
livelihoods = LZNAMEEN
)
clusts_to_share@data <- clusts_to_share@data %>%
dplyr::bind_cols(.,clim_rasts ) %>%
dplyr::bind_cols(., ip_rasts)
clusts_to_share <- clusts_to_share %>%
dplyr::bind_cols(.,clim_rasts ) %>%
dplyr::bind_cols(., ip_rasts)
row.names(clusts_to_share@data) <- sapply(slot(clusts_to_share, "polygons"), function(x) slot(x, "ID"))
row.names(clusts_to_share) <- sapply(slot(clusts_to_share, "polygons"), function(x) slot(x, "ID"))
#row.names(clusts_to_share) <- sapply(slot(clusts_to_share, "polygons"), function(x) slot(x, "ID"))
row.names(clusts_to_share) <- sf::st_geometry(clusts_to_share)$id
geojsonio::geojson_json(clusts_to_share) %>%
geojsonio::geojson_write(., file = paste0(root, "/_results/clim_conflict_ips_overlays.geojson") )
install.packages("geojsonlint")
geojsonio::geojson_json(clusts_to_share) %>%
geojsonio::geojson_write(., file = paste0(root, "/_results/clim_conflict_ips_overlays.geojson") )
clusts_to_share %>% writexl::write_xlsx(paste0(root, "_results/clim_conflict_ips_overlays.xlsx"))
#raster::shapefile(clusts_to_share, paste0(root, "_results/clim_conflict_ips_overlays.shp"), overwrite = T)
base::saveRDS(clusts_to_share, paste0(root, "_results/clim_conflict_ips_overlays.rds"))
suppressMessages(library(pacman))
suppressMessages(pacman::p_load(tidyverse,geojsonsf, readxl, geojsonlint, RColorBrewer, writexl, raster,terra, sf, stringr, stringi, lattice, rasterVis, maptools,
latticeExtra, RColorBrewer,cowplot, grid,tmap, tmaptools, geojson, geojsonio, MetBrewer, paletteer, exactextractr))
#' Variable definition
#'
iso <- "NER"
baseDir <- "//alliancedfs.alliance.cgiar.org/WS18_Afrca_K_N_ACO/1.Data/Palmira/CSO/data/"
root <- paste0(baseDir, iso, "/")
scale_bar_pos <- switch( iso, "ZWE" = "left", "KEN" = "left", "UGA" = "right", "MLI" = "left", "SEN" = "left", "NGA" = "right", "SDN" = "right", 'PHL'="right", 'GTM'="right", "NER" = "right", "BFA" = "right", "SOM" = "right", "RWA" = "right", "MOZ"= "right")
scale_bar_top <- switch( iso, "ZWE" = "bottom", "KEN" = "bottom", "UGA" = "bottom", "MLI" = "bottom", "SEN" = "top", "NGA" = "bottom", "SDN" = "bottom", 'PHL'="top", 'GTM'="bottom", "NER" = "bottom", "BFA" = "bottom","SOM" = "bottom","RWA" = "bottom", "MOZ" = "bottom")
create_labels <- function(text, type = c("short", "long")){
if(type == "short"){
to_ret <- sapply(text, function(i){
if(grepl(" ", i)){
ret1 <- stringr::str_split(str_to_upper(i), " ") %>%
unlist %>%
str_extract(., "[A-Z]") %>%
paste0( ., collapse = '')
}else{
ret1 <- i %>%
str_extract(., "[A-Z]")
}
return(ret1)
}, simplify = "array" )
}else{
to_ret <- sapply(text, function(i){
if(grepl(" ", i)){
ret1 <- stringr::str_split(str_to_upper(i), " ") %>%
unlist %>%
str_extract(., "[A-Z]") %>%
paste0( ., collapse = '')
ret1 <- ifelse(!is.na(i), paste0(i, "(", ret1, ")"), NA)
}else{
ret1 <- i %>%
str_extract(., "[A-Z]")
ret1 <- ifelse(!is.na(i), paste0(i, "(",  i %>%
str_extract(., "[A-Z]"), ")" ), NA )
}
return(ret1)
})
}
return(to_ret)
}
fix_label <- function( rast_labs, labs = av_labs){
to_compare <- rast_labs %>%
dplyr::filter(!grepl("\\+", final_short_lab)) %>%
dplyr::pull(final_short_lab) %>%
str_split(., "\\+", simplify = T) %>%
c %>%
.[nchar(.) != 0] %>%
unique
vec <- sapply(rast_labs$final_short_lab, function(txt){
spt <- str_split(txt, "\\+", simplify = T) %>% c
if(!all(spt %in% to_compare)){
lab_diff <- setdiff(spt, to_compare)
to_replace <- labs %>%
dplyr::filter(final_short_lab == lab_diff) %>%
dplyr::pull(long_labs)
ret <- str_replace(txt, patter = lab_diff, replacement = to_replace)
}else if(!grepl("\\+", txt)){
ret <- labs %>%
dplyr::filter(final_short_lab == txt) %>%
dplyr::pull(long_labs)
}else{
ret <- txt
}
return(ret)
}, simplify = T)
return(vec)
}
cats_extract <- function(values, coverage_fractions){
df_in <- data.frame(values, coverage_fractions) %>%
drop_na()
ret <- tibble(ID = unique(df_in$values)) %>%
dplyr::left_join(., rast_labs %>% dplyr::select(ID, final_label ), by = c("ID" = "ID"))
return(list(ret))
}
ip_text_description <- function(shp_object ,ip, df, n_vars = 10){
ip_var_list <- read_csv(paste0(root,"_results/hotspots/soc_eco_all_variables.csv")) %>%
dplyr::mutate(Code = ifelse(grepl("\\{iso\\}", Code), gsub("\\{iso\\}", iso, Code), Code),
Code = tolower(Code))
fl <- list.files(paste0(root,"_results/hotspots/"), pattern = paste0("_sorted_",unique(shp$NAME_0), '_', ip, ".xlsx"), full.names = T)
tb <- readxl::read_excel(fl) %>%
dplyr::mutate(Code = tolower(Code)) %>%
dplyr::left_join(., ip_var_list %>%
dplyr::filter(IP_id == ip ) %>%
dplyr::select(-Variable, - Classification), by = c("Code" = "Code")) %>%
dplyr::mutate(Code = ifelse(grepl("_awe", Code), paste0(iso,"_AWE"), Code),
Code = ifelse(grepl("_rwi", Code), paste0(iso, "_rwi"), Code)) %>%
dplyr::slice(1:n_vars) %>%
dplyr::mutate(Variable = stringr::str_replace(Variable, pattern = "[0-9]+:", replacement = ""),
Variable = stringr::str_trim(Variable)) %>%
dplyr::select(Code, Variable, Percentile)
df_proc <- df %>%
dplyr::filter(IP_id == ip) %>%
dplyr::left_join(., tb , by = c("Code" = "Code")) %>%
drop_na(Variable) %>%
dplyr::mutate(prefix = ifelse(Percentile == 0.9, paste0("[Values greather than ", Percentile, " distribution percentile]"),
paste0("[Values lower than ", Percentile, " distribution percentile]") ),
txt_descp = paste(Variable, prefix, paste0("[",source_file ,"]") ))
text_raw <- lapply(1:nrow(df_proc), function(k){
r <- raster(df_proc$file_path[k])
lst <- exactextractr::exact_extract(r, sf::st_as_sf(shp_object))
txt_out <- sapply(lst, function(i){
if(length(na.omit(i$value))> 0){
ret <- df_proc$txt_descp[k]
}else{
ret <- ""
}
return(ret)
})
return(txt_out)
}) %>%
do.call(cbind, .) %>%
apply(., 1, function(l){
if(all(l == "")){
ret <- ""
}else{
ret <- paste(l[nchar(l) > 0], collapse = ";")
}
})
return(text_raw)
}#end function
w_mask <- raster::raster(paste0(baseDir, "_global/masks/mask_world_1km.tif"))
to_share_dir <- paste0(root, "_results/", iso, "_to_share")
if(!dir.exists(to_share_dir)){dir.create(to_share_dir)}
##################################################################
######### Generate climate and conflict intersection #############
##################################################################
shp_c  <- st_read(paste0(root, "_shps/", iso, ".shp"))
shp <- shp_c
c_mask <- w_mask %>%
terra::crop(., extent(shp_c)) %>%
terra::mask(., shp_c)
conf_clust <- st_read(paste0(root, "_results/cluster_results/conflict/conflict_regular_clust.shp"))
clim_clust <- st_read(paste0(root, "_results/cluster_results/climate/climate_regular_clust.shp"))
st_crs(conf_clust) <- st_crs(c_mask)
st_crs(clim_clust) <- st_crs(c_mask)
clim_clust_labs <- readr::read_csv(paste0(baseDir, iso, "/_results/cluster_results/climate/climate_reg_cluster_text_description.csv")) %>%
dplyr::mutate(across(everything(.), as.character))
conf_clust_labs <- read_csv(paste0(root, "_results/cluster_results/conflict/conflict_cluster_text_description.csv")) %>%
dplyr::mutate(across(everything(.), as.character))
conf_clust <-  conf_clust %>%
left_join(., conf_clust_labs , by = c("clust")) %>%
dplyr::rename(clust_km = short_label)  %>%
rename_with(., function(i){return("conflict_cluster_text_description")}, starts_with("clutert")) %>%
#dplyr::rename("label" = "clust") %>%
dplyr::mutate(short_label = stringr::str_extract(string = label, pattern = "[A-Za-z]+"),
label = factor(label, levels = c("High conflict", "Moderate conflict", "Limited conflict"))) %>%
as_tibble()
clim_clust <- clim_clust %>%
dplyr::mutate(clust = as.character(clust)) %>%
dplyr::left_join(., clim_clust_labs , by = c("clust" = "clust")) %>%
as_tibble()
conf_clust <- st_as_sf(conf_clust)
clim_clust <- st_as_sf(clim_clust)
fips_country <- switch (iso,
"KEN" = "KE",
"UGA" = "UG",
"GTM" = "GT",
"MLI" = "ML",
"NGA" = "NI",
"PHL" = "RP",
"SDN" = "SU",
"SEN" = "SG",
"ETH" = "ET",
"ZMB" = "ZA",
"ZWE" = "ZI",
"PHL" = "PH",
"NER" = "NE",
"BFA" = "BF",
"SOM" = "SO",
"MOZ" = "MZ"
)
gwis_country <- switch (iso,
"KEN" = "501",
"UGA" = "500",
"GTM" = "90",
"MLI" = "432",
"NGA" = "475",
"PHL" = "840",
"SDN" = "625",
"SEN" = "433",
"ETH" = "530",
"ZMB" = "551",
"ZWE" = "552"
)
eth_c<- eth[eth@data$FIPS_CNTRY == fips_country,]
eth <- raster::shapefile("//alliancedfs.alliance.cgiar.org/WS18_Afrca_K_N_ACO/1.Data/Palmira/CSO/data/_global/ethnicity/GREG.shp")
fips_country <- switch (iso,
"KEN" = "KE",
"UGA" = "UG",
"GTM" = "GT",
"MLI" = "ML",
"NGA" = "NI",
"PHL" = "RP",
"SDN" = "SU",
"SEN" = "SG",
"ETH" = "ET",
"ZMB" = "ZA",
"ZWE" = "ZI",
"PHL" = "PH",
"NER" = "NE",
"BFA" = "BF",
"SOM" = "SO",
"MOZ" = "MZ"
)
gwis_country <- switch (iso,
"KEN" = "501",
"UGA" = "500",
"GTM" = "90",
"MLI" = "432",
"NGA" = "475",
"PHL" = "840",
"SDN" = "625",
"SEN" = "433",
"ETH" = "530",
"ZMB" = "551",
"ZWE" = "552"
)
eth_c<- eth[eth@data$FIPS_CNTRY == fips_country,]
eth_c
eth_c@data$eth_short_name <- eth_c@data %>%
dplyr::select(contains("SHORTNAM")) %>%
apply(., 1, function(rw){paste(na.omit(rw), collapse = ";")})
eth_c@data$eth_long_name <- eth_c@data %>%
dplyr::select(contains("LONGNAM")) %>%
apply(., 1, function(rw){paste(na.omit(rw), collapse = ";")})
View(eth_c)
eth_c
eth_ext <- st_intersection(clusts_to_share, st_as_sf(eth_c)) %>%
dplyr::group_by(ov) %>%
dplyr::summarize(eth_short_name = paste0(eth_short_name, collapse = ";"), eth_long_name = paste0(eth_long_name, collapse = ";") ) %>%
st_drop_geometry()
